name: üöÄ Deploy - Assistente Sustenta√ß√£o (Cloud Run via Docker Hub)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag da imagem (ex: latest ou v1.0.0)"
        required: true
        default: "latest"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ==============================================================
      # üì¶ Checkout do c√≥digo
      # ==============================================================
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      # ==============================================================
      # üîê Login no Docker Hub
      # ==============================================================
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # ==============================================================
      # üê≥ Build e Push da imagem Docker
      # ==============================================================
      - name: Build e Push da imagem Docker
        run: |
          IMAGE="docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/assistente-logs-chat:${{ github.event.inputs.tag }}"
          echo "üì¶ Construindo imagem: $IMAGE"
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "‚úÖ Imagem enviada com sucesso para Docker Hub."

      # ==============================================================
      # üîê Autentica√ß√£o com o Google Cloud
      # ==============================================================
      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ==============================================================
      # ‚òÅÔ∏è Configurar gcloud CLI
      # ==============================================================
      - name: Configurar gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # ==============================================================
      # üöÄ Deploy no Cloud Run usando a imagem do Docker Hub
      # ==============================================================
      - name: Deploy no Cloud Run
        run: |
          SERVICE_NAME="assistente-logs-chat"
          REGION="us-central1"
          IMAGE="docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/assistente-logs-chat:${{ github.event.inputs.tag }}"

          echo "üöÄ Iniciando deploy no Cloud Run..."
          echo "üìù Servi√ßo: $SERVICE_NAME"
          echo "üìç Regi√£o: $REGION"
          echo "üê≥ Imagem: $IMAGE"

          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --region $REGION \
            --allow-unauthenticated \
            --platform managed \
            --port 8080 \
            --min-instances=0 \
            --max-instances=1 \
            --set-env-vars "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"

          echo "‚úÖ Deploy conclu√≠do com sucesso."

      # ==============================================================
      # üåê Exibir URL p√∫blica do servi√ßo
      # ==============================================================
      - name: Mostrar URL do Cloud Run
        run: |
          URL=$(gcloud run services describe assistente-logs-chat \
            --region us-central1 \
            --format='value(status.url)')
          echo "üåç Servi√ßo dispon√≠vel em: $URL"

      # ==============================================================
      # üì§ Enviar logs (deploy) para Fluent Bit + Discord
      # ==============================================================
      - name: Enviar logs (deploy) para Fluent Bit e Discord
        if: always()
        env:
          FLUENT_BIT_URL: ${{ secrets.FLUENT_BIT_URL }}
          FLUENT_BIT_AUTH_BA: ${{ secrets.FLUENT_BIT_AUTH_BA }}
          DISCORD_WEBHOOK_PIPELINE: ${{ secrets.DISCORD_WEBHOOK_PIPELINE }}
        run: |
          REPO="${GITHUB_REPOSITORY}"
          WORKFLOW="${GITHUB_WORKFLOW}"
          JOB="${GITHUB_JOB}"
          BRANCH="${GITHUB_REF_NAME}"
          SHA="${GITHUB_SHA}"
          RUN_ID="${GITHUB_RUN_ID}"
          STATUS="${{ job.status }}"
          TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          TIPO_ERRO=$( [ "$STATUS" = "failure" ] && echo "DEPLOY" || echo "INFO" )
          BASE="${REPO}|${WORKFLOW}|${JOB}|${STATUS}|${SHA:0:8}"
          STACK_HASH=$(printf "%s" "$BASE" | shasum -a 256 | awk '{print $1}')

          echo "üì° Enviando logs de deploy para Fluent Bit..."
          curl --location "$FLUENT_BIT_URL" \
            --header 'Content-Type: application/json' \
            --header "Authorization: Basic $FLUENT_BIT_AUTH_BA" \
            --data "{
              \"service\": \"github-actions\",
              \"repo\": \"${REPO}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"status\": \"${STATUS}\",
              \"branch\": \"${BRANCH}\",
              \"autor\": \"${GITHUB_ACTOR}\",
              \"git_sha\": \"${SHA}\",
              \"run_id\": \"${RUN_ID}\",
              \"mensagem_curta\": \"Execu√ß√£o ${STATUS} em ${WORKFLOW}/${JOB}\",
              \"tipo_erro\": \"${TIPO_ERRO}\",
              \"stack_hash\": \"${STACK_HASH}\",
              \"timestamp\": \"${TS}\"
            }"
          echo "‚úÖ Logs enviados com sucesso para Fluent Bit."

          echo "üîî Enviando notifica√ß√£o para Discord..."
          EMBED_COLOR=$( [ "$STATUS" = "success" ] && echo "5763719" || echo "15548997" )
          COMMIT_URL="https://github.com/${REPO}/actions/runs/${RUN_ID}"

          curl -H "Content-Type: application/json" -X POST "$DISCORD_WEBHOOK_PIPELINE" \
            -d "{
              \"embeds\": [{
                \"title\": \"$( [ "$STATUS" = "success" ] && echo "‚úÖ Deploy - Assistente Sustenta√ß√£o (Cloud Run)" || echo "‚ùå Falha no Deploy - Assistente Sustenta√ß√£o")\",
                \"color\": ${EMBED_COLOR},
                \"fields\": [
                  {\"name\": \"üß© Projeto\", \"value\": \"${REPO}\", \"inline\": false},
                  {\"name\": \"üß± Pipeline\", \"value\": \"${WORKFLOW}\", \"inline\": true},
                  {\"name\": \"üíª Commit\", \"value\": \"${SHA:0:8}\", \"inline\": true},
                  {\"name\": \"üîß Status\", \"value\": \"${STATUS}\", \"inline\": true},
                  {\"name\": \"üåø Branch\", \"value\": \"${BRANCH}\", \"inline\": true},
                  {\"name\": \"üë§ Iniciado por\", \"value\": \"${GITHUB_ACTOR}\", \"inline\": true},
                  {\"name\": \"üìã Logs\", \"value\": \"[Acessar logs no GitHub](${COMMIT_URL})\", \"inline\": false}
                ],
                \"footer\": {
                  \"text\": \"GitHub Actions - Assistente Sustenta√ß√£o ‚Ä¢ ${TS}\"
                }
              }]
            }"
          echo "‚úÖ Notifica√ß√£o enviada para Discord com sucesso."
